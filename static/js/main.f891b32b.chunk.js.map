{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/UserList/style.js","components/UserList/UserList.js","utils/index.js","hooks/usePeopleFetch.js","pages/Home/style.js","pages/Home/Home.js","pages/Favorites/style.js","pages/Favorites/Favorites.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","component","Spinner","color","thickness","variant","CircularProgress","CheckBox","isChecked","onChange","label","value","FormControlLabel","control","Checkbox","checked","UserList","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","users","isLoading","countries","toggleCountry","toggleFavorite","onInfiniteScroll","useState","hoveredUserId","setHoveredUserId","handleMouseLeave","listInnerRef","useRef","cCode","name","map","country","i","includes","onScroll","current","scrollTop","scrollHeight","clientHeight","console","log","ref","user","index","onMouseEnter","handleMouseEnter","onMouseLeave","src","picture","large","alt","title","first","last","email","location","street","number","city","isFavorite","onClick","IconButton","storeToLocalStorage","key","payload","localStorage","setItem","JSON","stringify","retrieveFromLocalStorage","parse","getItem","error","deepClone","objOrArr","usePeopleFetch","setUsers","setCountries","setIsLoading","favorites","setFavorites","filteredList","setFilteredList","preventFetch","setPreventFetch","FAVORITE_LS_KEY","COUNTRIES_LS_KEY","apiCall","a","apiUrl","join","axios","get","response","data","results","userList","concat","useEffect","path","window","hash","replace","countryList","length","favoritesList","fetchUsers","favoriteList","filter","nat","fetchMoreUsers","c","push","userEmail","newFavoriteList","find","u","unshift","Home","Content","Header","Favorites","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createMuiTheme","palette","type","primary","main","CssBaseline","NavBar","setValue","useLocation","indexOf","pathname","AppBar","position","style","top","Tabs","_e","newValue","aria-label","indicatorColor","textColor","Tab","Link","to","AppRouter","exact","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.f891b32b.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Text = styled.div`\n  font-size: ${({ size }) => size};\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\n`;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport * as S from \"./style\";\n\nconst Text = ({ size = \"14px\", children, bold }) => {\n  return (\n    <Typography component={'span'}>\n      <S.Text size={size} bold={bold}>\n        {children}\n      </S.Text>\n    </Typography>\n  );\n};\n\nexport default Text;\n","import React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Spinner = ({ size, color, thickness, variant }) => {\n  return (\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\n  );\n};\n\nexport default Spinner;\n","import styled from \"styled-components\";\n\nexport const CheckBox = styled.div``;\n","import React from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport * as S from \"./style\";\n\nconst CheckBox = ({ isChecked, onChange, label, value }) => {\n  const handleChange = () => {\n    onChange && onChange(value);\n  };\n  return (\n    <S.CheckBox>\n      <FormControlLabel\n        control={<Checkbox checked={isChecked} onChange={handleChange} color=\"primary\" />}\n        label={label}\n      />\n    </S.CheckBox>\n  );\n};\n\nexport default CheckBox;\n","import styled from \"styled-components\";\n\nexport const UserList = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const List = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 35px;\n  width: 500px;\n  height: calc(100vh - 270px);\n  margin-block-start: 30px;\n  overflow-y: auto;\n`;\n\nexport const User = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n`;\n\nexport const UserInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  max-height: 128px;\n  gap: 2px;\n  overflow: hidden;\n`;\n\nexport const UserPicture = styled.img`\n  border-radius: 45%;\n`;\n\nexport const SpinnerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const IconButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\n  transition: opacity 0.2s ease-in-out;\n`;\n\nexport const Filters = styled.div`\n  display: flex;\n  justify-content: center;\n  & > * {\n    margin-inline-end: 8px;\n  }\n`;\n","import React, { useState, useRef } from \"react\";\nimport Text from \"components/Text\";\nimport Spinner from \"components/Spinner\";\nimport CheckBox from \"components/CheckBox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport * as S from \"./style\";\n\nconst UserList = ({\n  users,\n  isLoading,\n  countries,\n  toggleCountry,\n  toggleFavorite,\n  onInfiniteScroll\n}) => {\n\n  const [hoveredUserId, setHoveredUserId] = useState();\n\n  const handleMouseEnter = (index) => {\n    setHoveredUserId(index);\n  };\n\n  const handleMouseLeave = () => {\n    setHoveredUserId();\n  };\n\n  const listInnerRef = useRef();\n\n  const onScroll = () => {\n    if (listInnerRef.current) {\n      const { scrollTop, scrollHeight, clientHeight } = listInnerRef.current;\n      if (scrollTop + clientHeight === scrollHeight) {\n        console.log(\"reached bottom\");\n        if (onInfiniteScroll) onInfiniteScroll()\n      }\n    }\n  };\n\n  return (\n    <S.UserList>\n      <S.Filters>\n        {[{ cCode: 'BR', name: 'Brazil' },\n        { cCode: 'AU', name: 'Australia' },\n        { cCode: 'CA', name: 'Canada' },\n        { cCode: 'DE', name: 'Germany' },\n        { cCode: 'NL', name: 'NetherLand' }\n        ].map((country, i) => {\n\n          return (\n            <CheckBox\n              key={i}\n              value={country.cCode}\n              isChecked={countries.includes(country.cCode)}\n              label={country.name}\n              onChange={() => toggleCountry(country.cCode)} />\n          )\n        })}\n      </S.Filters>\n      <S.List\n        onScroll={onScroll}\n        ref={listInnerRef}\n      >\n        {users.map((user, index) => {\n          return (\n            <S.User\n              key={index}\n              onMouseEnter={() => handleMouseEnter(index)}\n              onMouseLeave={handleMouseLeave}\n            >\n              <S.UserPicture src={user?.picture.large} alt=\"\" />\n              <S.UserInfo>\n                <Text size=\"22px\" bold>\n                  {user?.name.title} {user?.name.first} {user?.name.last}\n                </Text>\n                <Text size=\"14px\">{user?.email}</Text>\n                <Text size=\"14px\">\n                  {user?.location.street.number} {user?.location.street.name}\n                </Text>\n                <Text size=\"14px\">\n                  {user?.location.city} {user?.location.country}\n                </Text>\n              </S.UserInfo>\n              <S.IconButtonWrapper isVisible={user.isFavorite || index === hoveredUserId} onClick={() => toggleFavorite(user?.email)}>\n                <IconButton>\n                  <FavoriteIcon color=\"error\" />\n                </IconButton>\n              </S.IconButtonWrapper>\n            </S.User>\n          );\n        })}\n        {isLoading && (\n          <S.SpinnerWrapper>\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\n          </S.SpinnerWrapper>\n        )}\n      </S.List>\n    </S.UserList>\n  );\n};\n\nexport default UserList;\n","export function storeToLocalStorage(key, payload) {\r\n  localStorage.setItem(key, JSON.stringify({ payload: payload }))\r\n}\r\n\r\nexport function retrieveFromLocalStorage(key) {\r\n  try {\r\n    return JSON.parse(localStorage.getItem(key)).payload\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\nexport function IsJsonString(str) {\r\n  try {\r\n    if (!str || !str.length) return false\r\n    JSON.parse(str)\r\n  } catch (e) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport function deepClone(objOrArr) {\r\n  return JSON.parse(JSON.stringify(objOrArr))\r\n}","import { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { storeToLocalStorage, retrieveFromLocalStorage, deepClone } from \"../utils\"\n\nexport const usePeopleFetch = () => {\n  const [users, setUsers] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [favorites, setFavorites] = useState([]);\n  const [filteredList, setFilteredList] = useState([]);\n  const [preventFetch, setPreventFetch] = useState(false)\n\n  const FAVORITE_LS_KEY = 'favorite-users'\n  const COUNTRIES_LS_KEY = 'countries'\n\n  useEffect(() => {\n    const path = window.location.hash.replace('#', '')\n    console.log(\"🚀 ~ file: usePeopleFetch.js ~ line 19 ~ useEffect ~ path\", path)\n    setPreventFetch(path != '/')\n  }, [window.location.hash])\n\n  // fetch from LS\n  useEffect(() => {\n    const countryList = retrieveFromLocalStorage(COUNTRIES_LS_KEY)\n    setCountries(countryList?.length ? countryList : [])\n    const favoritesList = retrieveFromLocalStorage(FAVORITE_LS_KEY)\n    setFavorites(favoritesList?.length ? favoritesList : [])\n  }, []);\n\n  // call new fetch on coutries change\n  useEffect(() => {\n    fetchUsers();\n    storeToLocalStorage(COUNTRIES_LS_KEY, countries)\n  }, [countries]);\n\n  // update LS favorites on change\n  useEffect(() => {\n    storeToLocalStorage(FAVORITE_LS_KEY, favorites)\n  }, [favorites]);\n\n\n  useEffect(() => {\n\n    if (!countries.length) {\n      setFilteredList(deepClone(favorites).concat(deepClone(users)))\n      return\n    }\n\n    const favoriteList = deepClone(favorites).filter(user => countries.includes(user.nat));\n    const userList = deepClone(users);\n    setFilteredList(favoriteList.concat(userList))\n\n  }, [favorites, users, countries]);\n\n  async function apiCall() {\n    try {\n\n      const apiUrl = `https://randomuser.me/api/?nat=${countries?.join(',')}&results=25&page=1`;\n      setIsLoading(true);\n      const response = await axios.get(apiUrl);\n      setIsLoading(false);\n\n      let users = response.data.results\n      return users;\n\n    } catch (error) {\n      console.error(\"🚀 ~ file: usePeopleFetch.js ~ line 60 ~ apiCall ~ error\", error)\n      return []\n    }\n  }\n\n  async function fetchMoreUsers() {\n    if (preventFetch) {\n      console.log('no need on favorite page')\n      return\n    }\n    try {\n      const users = await apiCall();\n      setUsers(userList => deepClone(userList).concat(users));\n\n    } catch (error) {\n      console.error(\"🚀 ~ file: usePeopleFetch.js ~ line 22 ~ fetchUsers ~ error\", error)\n    }\n  }\n\n  async function fetchUsers() {\n    if (preventFetch) {\n      console.log('no need on favorite page')\n      return\n    }\n    try {\n      const users = await apiCall();\n      setUsers(users);\n\n    } catch (error) {\n      console.error(\"🚀 ~ file: usePeopleFetch.js ~ line 22 ~ fetchUsers ~ error\", error)\n    }\n  }\n\n  const toggleCountry = (country) => {\n\n    let countryList = deepClone(countries)\n    if (countryList.includes(country)) {\n      countryList = countryList.filter(c => c != country)\n    } else {\n      countryList.push(country)\n    }\n    setCountries(countryList)\n  }\n\n  const toggleFavorite = (userEmail) => {\n    let userList = deepClone(users)\n    let newFavoriteList = deepClone(favorites)\n    let user = userList.find(user => user.email === userEmail) || newFavoriteList.find(u => u.email === userEmail)\n    user.isFavorite = !user.isFavorite;\n\n    if (!user.isFavorite) {\n      newFavoriteList = newFavoriteList.filter(u => u.email != user.email)\n      userList.unshift(user)\n\n    } else {\n      userList = userList.filter(u => u.email != user.email)\n      newFavoriteList.unshift(user)\n    }\n\n    setUsers(userList)\n    setFavorites(newFavoriteList)\n\n  }\n\n\n\n  return { users, filteredList, favorites, isLoading, fetchMoreUsers, countries, toggleCountry, toggleFavorite };\n};\n","import styled from \"styled-components\";\n\nexport const Home = styled.div`\n  display: flex;\n  height: 100vh;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding-block-start: 100px;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n`;\n\nexport const Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n  max-width: 400px;\n  width: 100%;\n`;\n","import React from \"react\";\nimport Text from \"components/Text\";\nimport UserList from \"components/UserList\";\nimport { usePeopleFetch } from \"hooks\";\nimport * as S from \"./style\";\n\nconst Home = () => {\n  const { users, isLoading, countries, filteredList, fetchMoreUsers, toggleCountry, toggleFavorite } = usePeopleFetch();\n\n  return (\n    <S.Home>\n      <S.Content>\n        <S.Header>\n          <Text size=\"64px\" bold>\n            PplFinder\n          </Text>\n        </S.Header>\n        <UserList\n          users={filteredList}\n          isLoading={isLoading}\n          countries={countries}\n          toggleCountry={toggleCountry}\n          toggleFavorite={toggleFavorite}\n          onInfiniteScroll={fetchMoreUsers}\n        />\n      </S.Content>\n    </S.Home>\n  );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\nexport const Home = styled.div`\n  display: flex;\n  height: 100vh;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding-block-start: 100px;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n`;\n\nexport const Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n  max-width: 400px;\n  width: 100%;\n`;\n","import React from \"react\";\nimport Text from \"components/Text\";\nimport UserList from \"components/UserList\";\nimport { usePeopleFetch } from \"hooks\";\nimport * as S from \"./style\";\n\nconst Favorites = () => {\n  const { isLoading, countries, favorites, toggleCountry, toggleFavorite } = usePeopleFetch();\n\n  return (\n    <S.Home>\n      <S.Content>\n        <S.Header>\n          <Text size=\"64px\" bold>\n            Favorites only\n          </Text>\n        </S.Header>\n        <UserList\n          users={countries.length ? favorites.filter(user => countries.includes(user.nat)) : favorites}\n          isLoading={isLoading}\n          countries={countries}\n          toggleCountry={toggleCountry}\n          toggleFavorite={toggleFavorite}\n        />\n      </S.Content>\n    </S.Home>\n  );\n};\n\nexport default Favorites;\n","import React from \"react\";\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst ThemeProvider = ({ children }) => {\n  const overrides = {\n    MuiTab: {\n      root: {\n        backgroundColor: \"#303030\",\n      },\n    },\n  };\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        overrides,\n        palette: {\n          type: \"dark\",\n          primary: {\n            main: \"#84ffff\",\n          },\n          error: {\n            main: \"#f06292\",\n          },\n        },\n      }),\n    []\n  );\n\n  return (\n    <Provider theme={theme}>\n      <CssBaseline />\n      {children}\n    </Provider>\n  );\n};\n\nexport default ThemeProvider;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nconst NavBar = () => {\n  const [value, setValue] = useState(0);\n\n  const handleChange = (_e, newValue) => {\n    setValue(newValue);\n  };\n\n  const location = useLocation();\n\n\n\n  useEffect(() => {\n    setValue(['/', '/favorites'].indexOf(location.pathname))\n  }, [location])\n\n  return (\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Navigation\"\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n      >\n        <Tab label=\"Home\" index={0} component={Link} to=\"/\" />\n        <Tab label=\"Favorites\" index={1} component={Link} to=\"/favorites\" />\n      </Tabs>\n    </AppBar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Home, Favorites } from \"pages\";\nimport { ThemeProvider } from \"theme\";\nimport NavBar from \"components/NavBar\";\n\nconst AppRouter = () => {\n  return (\n    <ThemeProvider>\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/favorites\" component={Favorites} />\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n};\n\nexport default AppRouter;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport AppRouter from \"AppRouter\";\n\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}